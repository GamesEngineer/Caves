%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: fcf7219bab7fe46a1ad266029b2fee19, type: 3}
  m_Name: Readme
  m_EditorClassIdentifier: 
  icon: {fileID: 2800000, guid: d035e52f454a6fb449bfd447634b1d0b, type: 3}
  title: GameU Caves
  sections:
  - heading: Overview
    text: This project teaches you how to code a system that procedurally generates caves in a 3D grid.
    linkText: 
    url:
  - heading: Lesson 1 - Directions and GridWalls
    text: Enumeration types, bit flags, struct types, and extension methods.
    linkText:
    url:
  - heading: Lesson 2 - GridMaze with Prim's algorithm
    text: Maze generation using randomized Prim's algorithm.
    linkText:
    url:
  - heading: Lesson 3 - Visualizing walls (part 1)
    text: C# events, and Unity's Graphics.DrawMeshInstanced and Matrix4x4.
    linkText:
    url:
  - heading: Lesson 4 - Visualizing walls (part 2)
    text: Creating batches of affine transformation matrices (translation, rotation, scale) for Unity's Graphics.DrawMeshInstanced function.
    linkText:
    url:
  - heading: Lesson 5 - Excavating a room (part 1)
    text: Convert room number to grid coordinates (integer division & modulus). List and HashSet collections, and the ICollection interface.
    linkText:
    url:
  - heading: Lesson 6 - Excavating a room (part 2)
    text: Added a 3D array of cell states (closed, open). Implemented TryExcavateCell and SetWallState methods. Now able to create a very small room, just two cells high.
    linkText:
    url:
  - heading: Lesson 7 - Excavating a room (part 3)
    text: Finished implementing TryExcavateRoom. Topics included, Unity coroutines & time-slicing, .NET collection types & interfaces, how to write a "generic method" that takes a type parameter (as well as value parameters), and how to get a specific element in a non-List collection using the ElementAt extension method for enumerable types.
    linkText:
    url:
  - heading: Lesson 8 - Grid of rooms with randomized centers
    text: Discussion of random number generators (RNG). Initialized Unity's RNG with a seed value. Used Random.Range(min, max) to offset the center of each room in XZ plane.
    linkText:
    url:
  - heading: Lesson 9 - Passages between rooms (part 1)
    text: Added code to excavate passages between adjacent rooms, using the maze generator to know which adjacent rooms are connected. Also, wrote functions for FindFloor, LateralStepTowards, and GetLateralDirection
    linkText:
    url:
  loadedLayout: 1
